							LESSON PLAN  (150 min)

Docente:		Bruce D. Marron
Ciclo: 			25-2
Materia: 		Terminología Especializada en Económica y Mercados Bursátiles
Curso:			IT0524
Licenciatura: 	Interpretación y Traduccíon
Horario:		Jueves 11:00 – 14:00	(11:00 - 13:30)
Grupo:			5C




#####################
HW_04.1 [Due: 27 Feb 2025]
Begin your personal translation dictionary. Go back through the economic terms we have discussed thus far and enter any unfamiliar terms in your dictionary. Be sure to provide Spanish and English translations and definitions.

HW_04.2 [Due: 27 Feb 2025]
Read Hall and Lieberman, BANK FAILURES AND BANKING PANICS (pp 725-728). Provide a very brief summary of this section (English and Spanish) and answer the following questions:
	1. Do you think that an FDIC-like system is a good idea? Explain.
	2. The analogous entity to the FDIC in Mexico is the Instituto Para La Proteccion al Ahorro
Bancario (IPAB). Read the first few pages of S&P's Global Ratings Report for the IPAB. Is the IPAB a fiscally sound institution? Explain. 
#####################


---- Open


Go thru exam



---- Content

Finish
	Banks
Next
	Stock Market 
	Corporations
Plus
	Building your Personal Glossary/Dictionary
	VCS
	Google Cloud Translations



Setting up Your Personal Dictionary (It's time!)
	A simple.txt file is highly recommended
	Here's why.......

	
Git and GitHub

1.1 Getting Started - About Version Control
	https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control

1.3 Getting Started - What is Git?
	https://git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F

1.4 Getting Started - The Command Line
https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line




##################
Install Notepad++
##################
https://notepad-plus-plus.org/downloads/



###############
GitHub Account
GitHub Repository
GitHub Token
################
https://github.com/


---GitHub Account
https://docs.github.com/en/get-started/onboarding/getting-started-with-your-github-account

			# https://github.com/
			# create login
				username: <your user name>  (your email)
				password: <your password> 
			
			#GitHub charges for private repositories!! public repositories can still choose who can 
			commit

---GitHub Repository
https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository

			# Create new repo
				'This will set master as the default branch'
			# Select the READ ME file option so that you can check the interface to the onsite 
			repository
			


---GitHub Token
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
			# Obtain a authetication token; Fine-grained token
			# use a personal access token in place of a password when authenticating to GitHub 
			from the command line 	
			
		Settings
			==> <> Developer Settings
				==> Personal Access Tokens (Fine-Grained)
					==> Token_#######
					 	Access on @<your username>
						Repository access	This token has access to all repositories owned by you.

					Token_###### (never expires)
					==> NEVER put token in a doc to be 'pushed' to the offsite repo (the doc will 
					contain a "secret")
					
	

####################
Open Reference Docs
#####################

git_usage_Windows.txt
Windows_Install_Git_LinuxUtilities.pdf


###########
Installing 
Linux Tools for Windows
##############
https://www.cygwin.com/
https://www.cygwin.com/install.html
	Install Cygwin by running setup-x86_64.exe
	
Clicking on categories and packages in the setup program package installation screen allows you to select what is installed or updated. 
(Check for awk and sed)

See "Windows_Install_Git_LinuxUtilities.pdf" 


###########
Installing Git
##############
1.4 Getting Started - The Command Line
https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line

1.5 Getting Started - Installing Git
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git

NB. for help with any git command
$ git help <command>



See "git_usage_Windows.txt" 	(start line 22)
See "Windows_Install_Git_LinuxUtilities.pdf" 



##############
General Info:
Repositories
##############

Each 'repository' composed of an onsite repository and its offsite repository (image)

Must have:
	*an onsite repository setup by keying a compu folder with a (hidden) /.git subfolder  

	*an offsite repository in GitHub (https://github.com/) already setup
		-- follow GitHub instructions for new repository setup
		


#########################################
Onsite Git repository set up AND 
synch to Offsite Github repo
##########################################

See " git_usage_Windows.txt" (start line 84)


	# open folder to house cloned repo (from GitHub)
$ git clone <your Github URL>

	# change directory to new onsite repo folder, open GitBash terminal, and check (p.69 ProGit2)
$ git remote -v
$ git remote show origin





#########################################
Manually dump in additional subdirectories and files
Make changes to existing files
track || stage || commit || push
##########################################

	# copy in additional subdirectories and files
Copy/paste your dictionary into git-tracked repo
 
	
	# show files and their status 
$ git status

	# TRACK and STAGE all files!!!
$ git add --all
$ git status

	#COMMIT all files
$ git commit -a -m "<date>"
 
 	# PUSH all files to offsite repo (aka 'origin')
$ git remote -v
$ git push origin --all
$ git status
On branch master
Your branch is up to date with 'origin/master'.
nothing to commit, working tree clean

	# See file changes and commit history
$ gitk








--- Work time
Next
THE STOCK MARKET AND THE MACROECONOMY (p 872 Hall&Lieberman)
