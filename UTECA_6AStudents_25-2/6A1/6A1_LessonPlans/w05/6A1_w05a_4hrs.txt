							LESSON PLAN  (200 min)

Docente:		Bruce D. Marron
Ciclo: 			25-2
Materia: 		Taller de Traducción Ingeniería y Adelantos Tecnológicos
Curso:			IT0629 
Licenciatura: 	Interpretación y  Traducción
Horario:		Martes 15:00 – 19:00; Jueves 19:00 – 21:00
Grupo:			6A




#####################
HW_04.1	[Due
Git Installation Guide in Spanish
#####################



#######
Today
#######

---- Open

Cloud services cut both ways in terms of security: you get off-site backup and disaster recovery, but you entrust your secrets to somebody else's hands. Doing the latter increases your exposure to government surveillance and the potential for deliberate or inadvertent breaches of your confidential files.
		-- Barton Gellman
			building safeguards against threats to democracy



---- Content 

Introduction to Git and GitHub VCS

1.1 Getting Started - About Version Control
	https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control

1.3 Getting Started - What is Git?
	https://git-scm.com/book/en/v2/Getting-Started-What-is-Git%3F

1.4 Getting Started - The Command Line
https://git-scm.com/book/en/v2/Getting-Started-The-Command-Line





###########
Installing Git
##############
1.5 Getting Started - Installing Git
https://git-scm.com/book/en/v2/Getting-Started-Installing-Git




###########
Installing Linux 
tools for Windows
##############
https://www.cygwin.com/






###############
GitHub Account
GitHub Repository
GitHub Token
################
https://docs.github.com/en/get-started/onboarding/getting-started-with-your-github-account
https://github.com/


---GitHub Account
https://docs.github.com/en/get-started/onboarding/getting-started-with-your-github-account

			#on-line go to: https://github.com/
			#create login
				username: <your user name>  (your email)
				password: <your password> 
			
			#GitHub charges for private repositories!! public repositories can still choose who can 
			commit

---GitHub Repository
https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository

			# Create new repo
				'This will set master as the default branch'
			# Select the READ ME file option so that you can check the interface to the onsite 
			repository
			


---GitHub Token
https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens
			# Obtain a authetication token; Fine-grained token
			# use a personal access token in place of a password when authenticating to GitHub 
			from the command line 	
			
		Settings
			==> <> Developer Settings
				==> Personal Access Tokens (Fine-Grained)
					==> Token_20241226
					 	Access on @bmarron18 bmarron18
						Repository access	This token has access to all repositories owned by you.

					Token_###### (never expires)
					==> NEVER put token in a doc to be 'pushed' to the offsite repo (the doc will 
					contain a "secret")
					
	
##############
General Info:
Repositories
##############

Each 'repository' composed of an onsite repository and its offsite repository (image)

Must have:
	*an onsite repository setup by keying a compu folder with a (hidden) /.git subfolder  

	*an offsite repository in GitHub (https://github.com/) already setup
		-- follow GitHub instructions for new repository setup
		


#########################################
Onsite Git repository set up AND 
synch to Offsite Github repo
##########################################
	# open folder to house cloned repo (from GitHub)
$ git clone <your Github URL>

	# change directory to new onsite repo folder, open terminal, and check (p.69 ProGit2)
$ git remote -v
$ git remote show origin

	# copy in additional subdirectories and files



#########################################
Manually dump in additional subdirectories and files
Make changes to existing files
track || stage || commit || push
##########################################
 
	
	# show files and their status 
$ git ls-files
$ git status

	# TRACK all files!!!
$ git add --all

	# STAGE all files 
$ git add --all
$ git status

	#COMMIT all files
$ git commit -a -m "<date>"
 
 	# PUSH all files to offsite repo (aka 'origin')
$ git remote -v
$ git push origin --all





$ git status
On branch master
Your branch is up to date with 'origin/master'.
nothing to commit, working tree clean

	# See file changes and commit history
$ gitk

#########################################
Make changes to existing files
track || stage || commit || push
##########################################


---- Work time
